import Development.Shake

opts = shakeOptions { shakeFiles    = ".shake/"
                    , shakeProgress = progressSimple }

(~>) = phony

binPath = "cabal-dev/bin/"
cmdBin = cmd . (++) binPath
cmdCabal = cmd "cabal-dev"
systemBin = system' . (++) binPath

main :: IO ()
main = shakeArgs opts $ do
  want ["build"]

  "clean" ~> removeFilesAfter ".shake" ["//*"]

  "build" ~> 
    need [ "cabal-dev/bin/blog" ]

  "launch" ~> do
    need ["build"]
    systemBin "blog" []

  "migrate" ~> do
    need ["cabal-dev/bin/blog-scripts-migrate"]
    cmdBin "blog-scripts-migrate"

  "seed" ~> do
    need ["cabal-dev/bin/blog-scripts-seed"]
    cmdBin "blog-scripts-seed"

  "view-src" ~> do
    fs <- srcFiles
    liftIO $ print fs

  "cabal-dev/bin/blog" *> \_ -> do
    fs <- srcFiles
    need fs
    cmdCabal ["install"]

  "cabal-dev/bin/blog-scripts-migrate" *> \_ -> do
    need ["build"]
    return ()

  "cabal-dev/bin/blog-scripts-seed" *> \_ -> do
    need ["build"]
    return ()

srcFiles :: Action [FilePath]
srcFiles = getDirectoryFiles ""
  [ "blog.cabal"
  , "src/*.hs"
  , "src/scripts/*.hs"
  , "src/Web/Blog/*.hs"
  , "src/Web/Blog/*/*.hs"
  , "src/Web/Blog/*/*/*.hs"
  , "src/Development/Blog/*.hs"
  , "src/Development/Blog/*/*.hs" ]
